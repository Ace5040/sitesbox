#!/bin/bash

SCRIPT=`realpath $0`
SCRIPTPATH=`dirname $SCRIPT`
cd $SCRIPTPATH/..
source .env

uid=$(id -u);
gid=$(id -u);

if [[ $SITES_PATH == /* ]]; then SITES_FOLDER_ABSOLUTE_PATH=$SITES_PATH; else SITES_FOLDER_ABSOLUTE_PATH=$(pwd)/$SITES_PATH; fi

function generatePassword () {
  pass=`docker run --rm ace5040/webcrate-utils:stable /webcrate/pwgen.sh`
  echo "[mysqldump]" > ./var/secrets/$1.cnf
  echo "user=root" >> ./var/secrets/$1.cnf
  echo "password=\"$pass\"" >> ./var/secrets/$1.cnf
  chmod 0600 ./var/secrets/$1.cnf
  echo $pass
}

function initDbFolder () {
  if [[ ! -d "./var/$1" ]] || [ ! "$(ls -A ./var/$1)" ] ; then
      mkdir -p "./var/$1"
      if [[ ! -f "./var/secrets/$1.cnf" ]]; then
        mkdir -p "./var/secrets"
        echo $(generatePassword $1)
      fi
  fi
  echo ''
}

MYSQL_ROOT_PASS=$(initDbFolder 'mysql')
MYSQL5_ROOT_PASS=$(initDbFolder 'mysql5')
POSTGRES_PASS=$(initDbFolder 'postgres')

if [[ ! -f "./users.yml" ]] ; then
  cp ./users.yml.example ./users.yml
fi
if [[ ! -f "./services.yml" ]] ; then
  cp ./services.yml.example ./services.yml
fi
if [[ ! -d "./var/mysql" ]] ; then
  mkdir -p "./var/mysql"
fi
if [[ ! -d "./var/ssh" ]] ; then
  mkdir -p "./var/ssh"
fi
if [[ ! -d "./var/mysql5" ]] ; then
  mkdir -p "./var/mysql5"
fi
if [[ ! -d "./var/postgres" ]] ; then
  mkdir -p "./var/postgres"
fi
if [[ ! -d "./var/sites" ]] ; then
  mkdir -p "./var/sites"
fi
if [[ ! -d "./var/duplicity" ]] ; then
  mkdir -p "./var/duplicity"
fi
if [[ ! -d "./var/letsencrypt" ]] ; then
  mkdir -p "./var/letsencrypt"
fi
if [[ ! -d "./var/openssl" ]] ; then
  mkdir -p "./var/openssl"
fi
if [[ ! -d "./var/crontabs" ]] ; then
  mkdir -p "./var/crontabs"
fi
if [[ ! -d "./var/backup" ]] ; then
  mkdir -p "./var/backup"
fi
if [[ ! -d "./var/secrets" ]] ; then
  mkdir -p "./var/secrets"
fi
if [[ ! -d "./var/solr" ]] ; then
  mkdir -p "./var/solr/logs"
  mkdir -p "./var/solr/cores"
fi
if [[ ! -d "./var/influxdb" ]] ; then
  mkdir -p "./var/influxdb"
fi
if [[ ! -d "./var/logs" ]] ; then
  mkdir -p "./var/logs"
fi
GRAFANA_PASS=''
if [[ ! -d "./var/grafana/data" ]] ; then
  mkdir -p "./var/grafana/data"
  mkdir -p "./var/grafana/log"
  GRAFANA_PASS=`docker run --rm ace5040/webcrate-utils:stable /webcrate/pwgen.sh`
  echo "user=admin" > ./var/secrets/grafana.secret
  echo "password=\"$GRAFANA_PASS\"" >> ./var/secrets/grafana.secret
fi

if [[ ! -f "./var/secrets/webcrate-admin.secret" ]] ; then
  admin_password=`docker run --rm ace5040/webcrate-utils:stable /webcrate/pwgen.sh`
  app_secret=`docker run --rm ace5040/webcrate-utils:stable pwgen -nAs1 32 1`
  echo "user=admin" > ./var/secrets/webcrate-admin.secret
  echo "password=$admin_password" >> ./var/secrets/webcrate-admin.secret
  echo "secret=$app_secret" >> ./var/secrets/webcrate-admin.secret
fi

docker run --rm --env-file=$(pwd)/.env \
  -e WEBCRATE_UID=$uid \
  -e WEBCRATE_GID=$gid \
  -v $SITES_FOLDER_ABSOLUTE_PATH:/sites \
  -v $(pwd)/users.yml:/webcrate/users.yml:ro \
  -v $(pwd)/config/nginx-templates:/webcrate/nginx-templates:ro \
  -v $(pwd)/config/php-pool-templates:/webcrate/custom_templates:ro \
  -v $(pwd)/var/letsencrypt:/webcrate/letsencrypt:ro \
  -v $(pwd)/var/openssl:/webcrate/openssl:ro \
  -v webcrate_nginx_configs:/webcrate/nginx_configs \
  -v webcrate_ssl_configs:/webcrate/ssl_configs \
  -v webcrate_php7_pools:/webcrate/php-fpm.d \
  -v webcrate_php73_pools:/webcrate/php73-fpm.d \
  -v webcrate_php5_pools:/webcrate/php56-fpm.d \
  -v webcrate_dnsmasq_hosts:/webcrate/dnsmasq_hosts \
  ace5040/webcrate-utils:stable \
  /webcrate/parse-users.py

docker run --rm --env-file=$(pwd)/.env \
  -v $(pwd)/services.yml:/webcrate/services.yml:ro \
  -v $(pwd)/config/nginx-templates:/webcrate/nginx-templates:ro \
  -v webcrate_nginx_configs:/webcrate/nginx_configs \
  -v webcrate_dnsmasq_hosts:/webcrate/dnsmasq_hosts \
  ace5040/webcrate-utils:stable \
  /webcrate/parse-services.py

docker volume create webcrate_dnsmasq_hosts
docker volume create webcrate_nginx_configs
docker volume create webcrate_ssl_configs
docker volume create webcrate_php7_pools
docker volume create webcrate_php73_pools
docker volume create webcrate_php5_pools
docker volume create webcrate_phpmyadmin
docker volume create webcrate_phpmyadmin_config
docker volume create webcrate_phpmyadmin_sessions
docker volume create webcrate_phppgadmin
docker volume create webcrate_phppgadmin_logs

docker network create --driver=bridge --subnet=172.31.0.0/16 webcrate_network > /dev/null

if [ "$WEBCRATE_MODE" == "DEV" ]; then DNS_MASQ=-p\ "53:53/udp"; else DNS_MASQ=''; fi

docker run -d --env-file=$(pwd)/.env --hostname webcrate-core --name webcrate-core \
  --network="webcrate_network" --dns=172.31.0.100 --ip=172.31.0.100 \
  --restart="unless-stopped" \
  -p "2222:22" \
  -p "21:21" \
  -p "20:20" \
  -p "50000-50100:50000-50100" \
  $DNS_MASQ \
  -e WEBCRATE_UID=$uid \
  -e WEBCRATE_GID=$gid \
  -v /etc/localtime:/etc/localtime:ro \
  -v $SITES_FOLDER_ABSOLUTE_PATH:/sites \
  -v $(pwd)/var/crontabs:/var/spool/cron \
  -v $(pwd)/config/telegraf:/etc/telegraf/telegraf.d:ro \
  -v $(pwd)/users.yml:/webcrate/users.yml:ro \
  -v $(pwd)/var/ssh:/webcrate/ssh_keys \
  -v $(pwd)/config/php-pool-templates:/webcrate/custom_templates:ro \
  -v $(pwd)/config/php/php7.ini:/etc/php/conf.d/user.ini:ro \
  -v $(pwd)/config/php/php73.ini:/etc/php73/conf.d/user.ini:ro \
  -v $(pwd)/config/php/php5.ini:/etc/php56/conf.d/user.ini:ro \
  -v $(pwd)/config/exim/exim.conf:/etc/mail/exim.conf \
  -v webcrate_php7_pools:/etc/php/php-fpm.d \
  -v webcrate_php73_pools:/etc/php73/php-fpm.d \
  -v webcrate_php5_pools:/etc/php56/php-fpm.d \
  -v webcrate_dnsmasq_hosts:/webcrate/dnsmasq_hosts \
  ace5040/webcrate-core:stable > /dev/null

docker run -d --env-file=$(pwd)/.env --hostname webcrate-admin --name webcrate-admin \
  --network="webcrate_network" --dns=172.31.0.100 \
  --restart="unless-stopped" \
  -e WEBCRATE_UID=$uid \
  -e WEBCRATE_GID=$gid \
  -v /etc/localtime:/etc/localtime:ro \
  -v $(pwd)/var/logs:/app/logs \
  -v $DOCKER_SOCKET:/var/run/docker.sock \
  -v $SITES_FOLDER_ABSOLUTE_PATH:/sites \
  -v $(pwd)/users.yml:/webcrate/users.yml \
  -v $(pwd)/services.yml:/webcrate/services.yml \
  -v $(pwd)/var/secrets:/webcrate/secrets \
  -v $(pwd)/config/exim/exim.conf:/etc/mail/exim.conf \
  ace5040/webcrate-admin:stable > /dev/null

docker run -d --env-file=$(pwd)/.env --hostname webcrate-tools --name webcrate-tools \
  --network="webcrate_network" --dns=172.31.0.100 \
  --restart="unless-stopped" \
  -e WEBCRATE_UID=$uid \
  -e WEBCRATE_GID=$gid \
  -v $SITES_FOLDER_ABSOLUTE_PATH:/sites \
  -v $DOCKER_SOCKET:/var/run/docker.sock \
  -v /etc/localtime:/etc/localtime:ro \
  -v $(pwd)/users.yml:/webcrate/users.yml:ro \
  -v $(pwd)/services.yml:/webcrate/services.yml:ro \
  -v $(pwd)/var/letsencrypt:/webcrate/letsencrypt \
  -v $(pwd)/var/openssl:/webcrate/openssl \
  -v $(pwd)/var/backup:/webcrate/backup \
  -v $(pwd)/var/secrets:/webcrate/secrets \
  -v $(pwd)/var/duplicity:/webcrate/duplicity \
  -v webcrate_ssl_configs:/webcrate/ssl_configs \
  ace5040/webcrate-tools:stable > /dev/null


docker run -d --env-file=$(pwd)/.env --hostname webcrate-nginx --name webcrate-nginx \
  --network="webcrate_network" --dns=172.31.0.100 \
  --restart="unless-stopped" \
  -e WEBCRATE_UID=$uid \
  -e WEBCRATE_GID=$gid \
  -p "80:1080" \
  -p "443:1443" \
  -v $SITES_FOLDER_ABSOLUTE_PATH:/sites \
  -v /etc/localtime:/etc/localtime:ro \
  -v $(pwd)/users.yml:/webcrate/users.yml:ro \
  -v $(pwd)/var/letsencrypt:/webcrate/letsencrypt:ro \
  -v $(pwd)/var/openssl:/webcrate/openssl:ro \
  -v $(pwd)/var/logs:/app/logs \
  -v webcrate_ssl_configs:/webcrate/ssl_configs:ro \
  -v webcrate_nginx_configs:/etc/nginx/conf.d:ro \
  ace5040/webcrate-nginx:stable > /dev/null

docker run -d --env-file=$(pwd)/.env --log-driver=none --name memcached \
  --network="webcrate_network" --dns=172.31.0.100 \
  --restart="unless-stopped" \
  memcached:1 > /dev/null

if [ "$MYSQL5_ROOT_PASS" != "" ]; then MYSQL5_ROOT_PASS=-e\ MYSQL_ROOT_PASSWORD="$MYSQL5_ROOT_PASS"; fi
docker run -d --env-file=$(pwd)/.env --name mysql5 \
  --network="webcrate_network" --dns=172.31.0.100 \
  --restart="unless-stopped" \
  --user "$uid:$gid" \
  $MYSQL5_ROOT_PASS \
  -p "3305:3306" \
  -v /etc/localtime:/etc/localtime:ro \
  -v $(pwd)/var/mysql5:/var/lib/mysql \
  -v $(pwd)/config/mysql/mysql5.cnf:/etc/mysql/conf.d/user.cnf \
  mariadb:5 > /dev/null

if [ "$MYSQL_ROOT_PASS" != "" ]; then MYSQL_ROOT_PASS=-e\ MYSQL_ROOT_PASSWORD="$MYSQL_ROOT_PASS"; fi
docker run -d --env-file=$(pwd)/.env --name mysql \
  --network="webcrate_network" --dns=172.31.0.100 \
  --restart="unless-stopped" \
  --user "$uid:$gid" \
  $MYSQL_ROOT_PASS \
  -p "3306:3306" \
  -v /etc/localtime:/etc/localtime:ro \
  -v $(pwd)/var/mysql:/var/lib/mysql \
  -v $(pwd)/config/mysql/mysql.cnf:/etc/mysql/conf.d/user.cnf \
  mariadb:10 > /dev/null

if [ "$POSTGRES_PASS" != "" ]; then POSTGRES_PASS=-e\ POSTGRES_PASSWORD="$POSTGRES_PASS"; fi
docker run -d --env-file=$(pwd)/.env --name postgres \
  --network="webcrate_network" --dns=172.31.0.100 \
  --restart="unless-stopped" \
  --user "$uid:$gid" \
  $POSTGRES_PASS \
  -p "5432:5432" \
  -v $(pwd)/var/postgres:/var/lib/postgresql/data \
  postgres:12 > /dev/null

docker run -d --env-file=$(pwd)/.env --name phpmyadmin \
  --network="webcrate_network" --dns=172.31.0.100 \
  --restart="unless-stopped" \
  -e PMA_HOSTS=mysql,mysql5 \
  -e UPLOAD_LIMIT=2048M \
  -v /etc/localtime:/etc/localtime:ro \
  -v $(pwd)/config/phpmyadmin/php.ini:/usr/local/etc/php/php.ini:ro \
  -v $(pwd)/config/phpmyadmin/config.user.inc.php:/etc/phpmyadmin/config.user.inc.php:ro \
  -v webcrate_phpmyadmin_sessions:/sessions \
  -v webcrate_phpmyadmin:/var/www/html \
  -v webcrate_phpmyadmin_config:/etc/phpmyadmin \
  phpmyadmin/phpmyadmin > /dev/null

docker run -d --env-file=$(pwd)/.env --name phppgadmin \
  --network="webcrate_network" --dns=172.31.0.100 \
  --restart="unless-stopped" \
  -e PMA_HOSTS=mysql,mysql5 \
  -e PHP_PG_ADMIN_SERVER_HOST=postgres \
  -v /etc/localtime:/etc/localtime:ro \
  -v webcrate_phppgadmin:/data \
  -v webcrate_phppgadmin_logs:/var/log \
  dockage/phppgadmin > /dev/null

docker run -d --env-file=$(pwd)/.env --name doctohtml \
  --network="webcrate_network" --dns=172.31.0.100 \
  --restart="unless-stopped" \
  -p "3000:3000" \
  ace5040/doctohtml:latest > /dev/null

docker run -d --env-file=$(pwd)/.env --name htmltopdf \
  --network="webcrate_network" --dns=172.31.0.100 \
  --restart="unless-stopped" \
  -p "3001:3000" \
  ace5040/htmltopdf:latest > /dev/null

docker run -d --env-file=$(pwd)/.env --log-driver=none --name solr \
  --network="webcrate_network" --dns=172.31.0.100 \
  --restart="unless-stopped" \
  --user "$uid:$gid" \
  -p "8983:8983" \
  -v /etc/localtime:/etc/localtime:ro \
  -v $(pwd)/var/solr/logs:/opt/solr/server/logs \
  -v $(pwd)/var/solr/cores:/opt/solr/server/solr/mycores \
  --entrypoint docker-entrypoint.sh \
  solr:6 solr -force -f > /dev/null

docker run -d --env-file=$(pwd)/.env --log-driver=none --name grafana \
  --network="webcrate_network" --dns=172.31.0.100 \
  --restart="unless-stopped" \
  --user "$uid:$gid" \
  -e GF_PATHS_DATA=/data \
  -e GF_PATHS_LOGS=/log \
  -e GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/home.json \
  -p "8181:3000" \
  -v /etc/localtime:/etc/localtime:ro \
  -v $(pwd)/var/grafana/data:/data \
  -v $(pwd)/var/grafana/log:/log \
  -v $(pwd)/config/grafana/home.json:/home.json \
  -v $(pwd)/config/grafana/dashboard.yml:/etc/grafana/provisioning/dashboards/default.yml \
  -v $(pwd)/config/grafana/datasource.yml:/etc/grafana/provisioning/datasources/default.yml \
  grafana/grafana > /dev/null

docker run -d --env-file=$(pwd)/.env --log-driver=none --name influxdb \
  --network="webcrate_network" --dns=172.31.0.100 \
  --restart="unless-stopped" \
  --user "$uid:$gid" \
  -e INFLUXDB_DB=telegraf \
  -v /etc/localtime:/etc/localtime:ro \
  -v $(pwd)/var/influxdb:/var/lib/influxdb \
  influxdb:latest > /dev/null

if [ "$GRAFANA_PASS" != "" ]; then
  sleep 5; docker exec --user $uid:$gid grafana grafana-cli admin reset-admin-password "$GRAFANA_PASS"
fi
